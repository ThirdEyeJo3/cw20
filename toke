// SPDX-License-Identifier: MIT

pragma solidity ^0.8.0;

import "github.com/CosmWasm/cosmwasm-contracts/contracts/cw20/interfaces.sol";

contract MyToken is CW20 {
    string public name;
    string public symbol;
    uint8 public decimals;

    constructor(
        string memory _name,
        string memory _symbol,
        uint8 _decimals,
        uint256 _totalSupply
    ) {
        name = _name;
        symbol = _symbol;
        decimals = _decimals;
        _mint(msg.sender, _totalSupply);
    }

    function burn(uint256 amount) public {
        _burn(msg.sender, amount);
    }

    function mint(address recipient, uint256 amount) public {
        _mint(recipient, amount);
    }

    function transfer(address recipient, uint256 amount) public override returns (bool) {
        require(recipient != address(0), "CW20: transfer to the zero address");
        _transfer(msg.sender, recipient, amount);
        return true;
    }

    function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {
        require(sender != address(0), "CW20: transfer from the zero address");
        require(recipient != address(0), "CW20: transfer to the zero address");
        _transfer(sender, recipient, amount);
        _approve(sender, msg.sender, allowance(sender, msg.sender) - amount);
        return true;
    }
}
